version: "3.8"

services:
  db:
    image: postgres:12
    container_name: postgres_db_bot
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      - ./sql:/sql/
    env_file:
      - ./.env
    ports:
      - 5434:5432

  redis:
    image: redis:alpine
    container_name: redis_bot

  web:
    image: milssky/attendance_bot:master
    container_name: django_bot
    volumes:
      - .:/code
    ports:
      - 8000:8000
    env_file:
      - ./.env
    depends_on:
      - db
      - redis
    entrypoint: /entrypoint.sh

  nginx:
    image: nginx:1.19.3
    container_name: nginx_bot
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
      - ./static:/var/html/static/
      - ./media:/var/html/media/
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    depends_on:
      - redis
      - web

  certbot:
    image: certbot/certbot
    restart: unless-stopped
    container_name: certbot_bot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  celery:
    image: milssky/attendance_bot:master
    container_name: celery_bot
    command: celery -A attendance_bot worker --loglevel=INFO
    volumes:
      - .:/code
    env_file:
      - ./.env
    depends_on:
      - redis
      - web

  celery-beat:
    image: milssky/attendance_bot:master
    container_name: celery_beat_bot
    command: celery -A attendance_bot beat --loglevel=INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - .:/code
    env_file:
      - ./.env
    depends_on:
      - redis
      - celery
      - web

volumes:
  postgres_data:
